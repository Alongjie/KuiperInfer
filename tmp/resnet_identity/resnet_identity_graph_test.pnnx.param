7767517
13 12
pnnx.Input               pnnx_input_0             0 1 0 #0=(1,3,512,512)f32
nn.Conv2d                conv1                    1 1 0 1 bias=True dilation=(1,1) groups=1 in_channels=3 kernel_size=(3,3) out_channels=64 padding=(1,1) padding_mode=zeros stride=(1,1) @bias=(64)f32 @weight=(64,3,3,3)f32 #0=(1,3,512,512)f32 #1=(1,64,512,512)f32
nn.MaxPool2d             max1                     1 1 1 2 ceil_mode=False dilation=(1,1) kernel_size=(2,2) padding=(0,0) return_indices=False stride=(2,2) #1=(1,64,512,512)f32 #2=(1,64,256,256)f32
nn.Conv2d                conv1_1                  1 1 2 3 bias=True dilation=(1,1) groups=1 in_channels=64 kernel_size=(3,3) out_channels=64 padding=(1,1) padding_mode=zeros stride=(2,2) @bias=(64)f32 @weight=(64,64,3,3)f32 #2=(1,64,256,256)f32 #3=(1,64,128,128)f32
nn.Conv2d                convbn2d_0               1 1 3 4 bias=True dilation=(1,1) groups=1 in_channels=64 kernel_size=(3,3) out_channels=64 padding=(1,1) padding_mode=zeros stride=(1,1) @bias=(64)f32 @weight=(64,64,3,3)f32 $input=3 #3=(1,64,128,128)f32 #4=(1,64,128,128)f32
nn.ReLU                  relu2                    1 1 4 5 #4=(1,64,128,128)f32 #5=(1,64,128,128)f32
nn.Conv2d                convbn2d_1               1 1 5 6 bias=True dilation=(1,1) groups=1 in_channels=64 kernel_size=(3,3) out_channels=64 padding=(1,1) padding_mode=zeros stride=(1,1) @bias=(64)f32 @weight=(64,64,3,3)f32 $input=5 #5=(1,64,128,128)f32 #6=(1,64,128,128)f32
pnnx.Expression          pnnx_expr_0              2 1 5 6 7 expr=add(@0,@1) #5=(1,64,128,128)f32 #6=(1,64,128,128)f32 #7=(1,64,128,128)f32
nn.ReLU                  relu_out                 1 1 7 8 #7=(1,64,128,128)f32 #8=(1,64,128,128)f32
nn.Conv2d                conv4                    1 1 8 9 bias=False dilation=(1,1) groups=1 in_channels=64 kernel_size=(3,3) out_channels=128 padding=(1,1) padding_mode=zeros stride=(1,1) @weight=(128,64,3,3)f32 #8=(1,64,128,128)f32 #9=(1,128,128,128)f32
nn.MaxPool2d             max2                     1 1 9 10 ceil_mode=False dilation=(1,1) kernel_size=(2,2) padding=(0,0) return_indices=False stride=(2,2) #9=(1,128,128,128)f32 #10=(1,128,64,64)f32
nn.Conv2d                conv5                    1 1 10 11 bias=False dilation=(1,1) groups=1 in_channels=128 kernel_size=(3,3) out_channels=128 padding=(1,1) padding_mode=zeros stride=(2,2) @weight=(128,128,3,3)f32 #10=(1,128,64,64)f32 #11=(1,128,32,32)f32
pnnx.Output              pnnx_output_0            1 0 11 #11=(1,128,32,32)f32
